{"version":3,"sources":["assets/images/lizard.jpg","Components/Home/subcomponents/InfoCard.js","redux/actions/home.js","redux/actions/actionTypes.js","redux/service/home.js","HOC/WithLoading.js","Components/Home/subcomponents/HomeGridLayout.js","Components/Home/Home.js","Components/Inputs/MuiButton.js","Components/Inputs/MuiCheckbox.js","Components/Inputs/MuiRadioButton.js","Components/ComponentList/ComponentList.js","Components/About/About.js","utils/history.js","Components/Layout/Drawer/NavDrawer.js","Components/Layout/Header/Header.js","Components/Layout/Layout.js","theme/theme.js","App.js","serviceWorker.js","redux/reducers/basic.js","redux/reducers/pokemonList.js","redux/store.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","media","height","InfoCard","title","image","classes","Card","className","CardHeader","CardMedia","URL","createObjectURL","CardActions","Button","size","defaultProps","description","getPokemonSuccess","payload","type","transformInput","pokeArray","a","transformedArray","map","pokemon","id","data","name","resp","item","axios","get","responseType","timeout","Promise","all","arrayOfPokemon","fetchPokemonList","dispatch","getPokemonStart","response","status","res","results","pokemonFinalArray","console","log","WithLoading","Component","isLoading","message","props","active","spinner","text","spacingHelper","padding","overflowY","connect","state","pokemonList","getPokemon","Grid","spacing","container","_item","key","xs","md","lg","xl","useEffect","MuiButton","children","handleClick","color","variant","onClick","MuiCheckbox","handleChange","checked","label","value","FormControlLabel","control","Checkbox","onChange","MuiRadioButton","labelPlacement","isChecked","Radio","checkboxArr","ComponentList","useState","checkboxValue","setCheckboxValue","radioValue","setRadioValue","onChangeCheckBox","e","valueAsNumber","Number","target","indexOf","filter","onChangeCheckRadio","Typography","About","createHashHistory","pages","link","NavDrawer","isOpen","onClose","history","SwipeableDrawer","open","List","page","ListItem","linkTo","push","button","Header","isDrawerOpen","setDrawerOpen","AppBar","Toolbar","IconButton","htmlColor","Layout","style","themePurple","createMuiTheme","palette","primary","purple","themeRed","red","themeGreen","green","withRouter","ThemeProvider","theme","location","pathname","split","CssBaseline","exact","path","Boolean","window","hostname","match","initialState","rootReducer","combineReducers","basic","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","logger","ReduxThunk","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.537619ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lizard.34dfeed2.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport lizard from \"../../../assets/images/lizard.jpg\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n  makeStyles,\n  CardHeader,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 345\n  },\n  media: {\n    height: 300\n  }\n});\n\nfunction InfoCard({ title, image }) {\n  const classes = useStyles();\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardHeader title={title} />\n        <CardMedia\n          className={classes.media}\n          image={URL.createObjectURL(image)}\n          title={title}\n        />\n\n        <CardActions>\n          <Button size=\"small\">Learn More</Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n}\n\nInfoCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nInfoCard.defaultProps = {\n  title: \"Lizard\",\n  description:\n    '\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore verit'\n};\n\nexport default InfoCard;\n","import * as actionTypes from \"./actionTypes\";\n\nexport const getPokemonSuccess = payload => ({\n  type: actionTypes.FETCH_POKEMON_SUCCESS,\n  payload\n});\n\nexport const getPokemonStart = payload => ({\n  type: actionTypes.FETCH_POKEMON_START,\n  payload\n});\n\nexport const getPokemonFail = () => ({\n  type: actionTypes.FETCH_POKEMON_FAIL\n});\n","export const ADD = \"ADD\";\nexport const SUB = \"SUB\";\n\nexport const FETCH_POKEMON_START = \"FETCH_POKEMON_START\";\nexport const FETCH_POKEMON_SUCCESS = \"FETCH_POKEMON_SUCCESS\";\nexport const FETCH_POKEMON_FAIL = \"FETCH_POKEMON_FAIL\";\n","import axios from \"axios\";\nimport {\n  getPokemonStart,\n  getPokemonSuccess,\n  getPokemonFail\n} from \"../actions/index\";\nconst baseUrl = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=10\";\nconst getData = \" https://pokeapi.co/api/v2/pokemon/\";\n\nconst getImageUrlApi = id =>\n  `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n\nconst transformInput = async pokeArray => {\n  const transformedArray = pokeArray.map(pokemon => ({\n    id: pokemon.data.id,\n    name: pokemon.data.name\n  }));\n  const resp = transformedArray.map(async item => ({\n    ...item,\n    image: await axios.get(getImageUrlApi(item.id), {\n      responseType: \"blob\",\n      timeout: 30000\n    })\n  }));\n  const arrayOfPokemon = await Promise.all(resp);\n\n  return arrayOfPokemon;\n};\n\nexport const fetchPokemonList = () => async dispatch => {\n  dispatch(getPokemonStart());\n  try {\n    const response = await axios.get(baseUrl);\n    if (response.status !== 200) {\n      dispatch(getPokemonFail());\n    } else {\n      const res = response.data.results.map(item =>\n        axios.get(`${getData}${item.name}`)\n      );\n      const arrayOfPokemon = await Promise.all(res);\n\n      const pokemonFinalArray = await transformInput(arrayOfPokemon);\n      // const res11 = await Promise.all(transformInput(arrayOfPokemon));\n      dispatch(getPokemonSuccess(pokemonFinalArray));\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch(getPokemonFail());\n  }\n};\n","import React from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction WithLoading(Component) {\n  return function WihLoadingComponent({ isLoading, message, ...props }) {\n    if (!isLoading) {\n      return <Component {...props} />;\n    }\n    return (\n      <>\n        <LoadingOverlay\n          active={isLoading}\n          spinner={<ClipLoader />}\n          text={message}\n        />\n      </>\n    );\n  };\n}\nexport default WithLoading;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InfoCard from \"./InfoCard\";\nimport { fetchPokemonList } from \"../../../redux/service/home\";\nimport WithLoading from \"../../../HOC/WithLoading\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  spacingHelper: {\n    height: \"100%\",\n    padding: \"8px\"\n  },\n  root: {\n    padding: 20,\n    overflowY: \"auto\",\n    height: \"100%\"\n  }\n});\n\nfunction HomeGrid({ pokemonList }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.spacingHelper}>\n      <Grid className={classes.root} spacing={2} container>\n        {pokemonList.pokemon.map(_item => (\n          <Grid key={_item.id} item xs={12} md={4} lg={3} xl={3}>\n            <InfoCard title={_item.name} image={_item.image.data} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nHomeGrid.propTypes = {};\n\nconst mapStateToProps = state => ({\n  isLoading: state.pokemonList.isLoading,\n  pokemonList: state.pokemonList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPokemon: () => dispatch(fetchPokemonList())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithLoading(HomeGrid));\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport HomeGrid from \"./subcomponents/HomeGridLayout\";\nimport { fetchPokemonList } from \"../../redux/service/home\";\n// import PropTypes from \"prop-types\";\n\nfunction Home({ getPokemon }) {\n  useEffect(() => {\n    getPokemon();\n  }, []);\n  return (\n    <>\n      <HomeGrid />\n    </>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getPokemon: () => dispatch(fetchPokemonList())\n});\n\nHome.propTypes = {};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\n\nfunction MuiButton({ children, handleClick }) {\n  return (\n    <>\n      <Button color=\"primary\" variant=\"contained\" onClick={handleClick}>\n        {children}\n      </Button>\n    </>\n  );\n}\n\nMuiButton.propTypes = {\n  handleClick: PropTypes.func.isRequired\n};\n\nMuiButton.defaultProps = {\n  handleClick: () => null\n};\n\nexport default MuiButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nfunction MuiCheckbox({ handleChange, checked, label, value }) {\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={handleChange}\n            name={label}\n            value={value}\n            color=\"primary\"\n          />\n        }\n        label={label}\n      />\n    </div>\n  );\n}\n\nMuiCheckbox.propTypes = {\n  handleChange: PropTypes.func,\n  checked: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nMuiCheckbox.defaultProps = {\n  checked: false,\n  handleChange: () => null\n};\n\nexport default MuiCheckbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormControlLabel, Radio } from \"@material-ui/core\";\n\nfunction MuiRadioButton({\n  labelPlacement,\n  label,\n  value,\n  handleChange,\n  isChecked\n}) {\n  return (\n    <>\n      <FormControlLabel\n        value={value}\n        control={<Radio checked={isChecked} color=\"primary\" />}\n        label={label}\n        labelPlacement={labelPlacement}\n        onChange={handleChange}\n      />\n    </>\n  );\n}\n\nMuiRadioButton.propTypes = {\n  labelPlacement: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  handleChange: PropTypes.func,\n  isChecked: PropTypes.bool\n};\n\nMuiRadioButton.defaultProps = {\n  isChecked: false,\n  handleChange: () => null,\n  labelPlacement: \"end\"\n};\n\nexport default MuiRadioButton;\n","import React, { useState } from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Button from \"../Inputs/MuiButton\";\nimport MuiCheckbox from \"../Inputs/MuiCheckbox\";\nimport MuiRadioButton from \"../Inputs/MuiRadioButton\";\n// import PropTypes from \"prop-types\";\n\nconst checkboxArr = [{ id: 1, value: \"Cat\" }, { id: 2, value: \"Dog\" }];\n\nfunction ComponentList(props) {\n  const [checkboxValue, setCheckboxValue] = useState([]);\n  const [radioValue, setRadioValue] = useState(null);\n\n  const onChangeCheckBox = e => {\n    const valueAsNumber = Number(e.target.value);\n    if (checkboxValue.indexOf(valueAsNumber) > -1) {\n      setCheckboxValue(checkboxValue.filter(item => item !== valueAsNumber));\n    } else {\n      setCheckboxValue([...checkboxValue, Number(valueAsNumber)]);\n    }\n  };\n  const onChangeCheckRadio = e => {\n    setRadioValue(Number(e.target.value));\n  };\n\n  return (\n    <>\n      <Typography>These are some compontents</Typography>\n      <Grid container>\n        <Button>Click me</Button>\n        {checkboxArr.map(item => (\n          <MuiCheckbox\n            handleChange={onChangeCheckBox}\n            key={item.id}\n            label={item.value}\n            value={item.id}\n            checked={checkboxValue.indexOf(item.id) > -1}\n          />\n        ))}\n        {checkboxArr.map(item => (\n          <MuiRadioButton\n            handleChange={onChangeCheckRadio}\n            key={item.id}\n            label={item.value}\n            value={item.id}\n            isChecked={radioValue === item.id}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n}\n\nComponentList.propTypes = {};\n\nexport default ComponentList;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nfunction About(props) {\n  return (\n    <div>\n      <span>this is the About</span>\n    </div>\n  );\n}\n\n// About.propTypes = {};\n\nexport default About;\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory({\n  /* pass a configuration object here if needed */\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SwipeableDrawer, List, ListItem } from \"@material-ui/core\";\nimport history from \"../../../utils/history\";\n\nconst pages = [\n  { id: 1, name: \"Home\", link: \"/\" },\n  { id: 2, name: \"Components\", link: \"/\" },\n  { id: 3, name: \"Components (red)\", link: \"/components/red\" },\n  { id: 4, name: \"Components (green)\", link: \"/components/green\" }\n];\n\nfunction NavDrawer({ isOpen, onClose }) {\n  const handleClick = linkTo => {\n    history.push(linkTo);\n  };\n  console.log(history);\n  return (\n    <SwipeableDrawer open={isOpen} onClose={onClose}>\n      <List>\n        {pages.map(page => (\n          <ListItem onClick={() => handleClick(page.link)} button key={page.id}>\n            {page.name}\n          </ListItem>\n        ))}\n      </List>\n    </SwipeableDrawer>\n  );\n}\n\nNavDrawer.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default NavDrawer;\n","import React, { useState } from \"react\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NavDrawer from \"../Drawer/NavDrawer\";\n\nfunction Header() {\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n\n  const openDrawer = () => {\n    setDrawerOpen(true);\n  };\n\n  const onCloseDrawer = () => {\n    setDrawerOpen(false);\n  };\n\n  return (\n    <>\n      <NavDrawer isOpen={isDrawerOpen} onClose={onCloseDrawer} />\n      <AppBar>\n        <Toolbar>\n          <IconButton onClick={openDrawer}>\n            <MenuIcon htmlColor=\"#ffffff\" />\n          </IconButton>\n          <Typography variant=\"h6\">Watch!Eat</Typography>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header/Header\";\n// import PropTypes from 'prop-types'\n\nfunction Layout({ children }) {\n  return (\n    <>\n      <section style={{ height: \"64px\" }}>\n        <Header />\n      </section>\n\n      <main className=\"main-container\">{children}</main>\n    </>\n  );\n}\n\nLayout.propTypes = {};\n\nexport default Layout;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { purple, red, green } from \"@material-ui/core/colors\";\n\nexport const themePurple = createMuiTheme({\n  palette: {\n    primary: purple\n  }\n});\n\nexport const themeRed = createMuiTheme({\n  palette: {\n    primary: red\n  }\n});\n\nexport const themeGreen = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport ComponentList from \"./Components/ComponentList/ComponentList\";\nimport About from \"./Components/About/About\";\nimport Layout from \"./Components/Layout/Layout\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { themeGreen, themePurple, themeRed } from \"./theme/theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import history from \"./utils/history\";\n\nfunction App({ history }) {\n  const switchTheme = () => {\n    console.log(\n      \"this is a render\",\n      history.location.pathname.split(\"/\").indexOf(\"red\") > -1\n    );\n    if (history.location.pathname.split(\"/\").indexOf(\"red\") > -1) {\n      return themeRed;\n    } else if (history.location.pathname.split(\"/\").indexOf(\"green\") > -1) {\n      return themeGreen;\n    }\n    return themePurple;\n  };\n\n  return (\n    <ThemeProvider theme={switchTheme()}>\n      <CssBaseline />\n      <Layout>\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/components\">\n            <ComponentList />\n          </Route>\n          <Route exact path=\"/components/:color\">\n            <ComponentList />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Layout>\n    </ThemeProvider>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      return { ...state, ...payload };\n\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from \"./../actions/actionTypes\";\nconst initialState = {\n  pokemon: [],\n  isLoading: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.FETCH_POKEMON_START:\n      return { ...state, isLoading: true };\n    case actionTypes.FETCH_POKEMON_SUCCESS:\n      return { ...state, pokemon: [...payload], isLoading: false };\n    case actionTypes.FETCH_POKEMON_FAIL:\n      return { ...state, isLoading: false };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport basic from \"./reducers/basic\";\n\nimport pokemonList from \"./reducers/pokemonList\";\nconst rootReducer = combineReducers({\n  basic,\n  pokemonList\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(logger, ReduxThunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport history from \"./utils/history\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}